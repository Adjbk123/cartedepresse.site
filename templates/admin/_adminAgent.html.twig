<div class="row">
    <!-- Card 1: Total des Demandes -->
    <div class="col-md-3 mb-3">
        <div class="card card-border-shadow-primary h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-1">
                    <div class="avatar me-4">
                        <span class="avatar-initial rounded bg-label-primary">
                            <i class="icon-base ti tabler-folder icon-28px"></i>
                        </span>
                    </div>
                    <h4 class="mb-0" style="color: #f39c12;">{{ totalDemandes }}</h4>
                </div>
                <p class="mb-1">Total des Demandes</p>
            </div>
        </div>
    </div>

    <!-- Card 2: Demandes en Cours -->
    <div class="col-md-3 mb-3">
        <div class="card card-border-shadow-primary h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-1">
                    <div class="avatar me-4">
                        <span class="avatar-initial rounded bg-label-primary">
                            <i class="icon-base ti tabler-hourglass icon-28px"></i>
                        </span>
                    </div>
                    <h4 class="mb-0" style="color: #3498db;">{{ demandesEnCours }}</h4>
                </div>
                <p class="mb-1">Demandes en Cours</p>
            </div>
        </div>
    </div>

    <!-- Card 3: Demandes Rejetées -->
    <div class="col-md-3 mb-3">
        <div class="card card-border-shadow-primary h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-1">
                    <div class="avatar me-4">
                        <span class="avatar-initial rounded bg-label-primary">
                            <i class="icon-base ti tabler-x icon-28px"></i>
                        </span>
                    </div>
                    <h4 class="mb-0" style="color: #e74c3c;">{{ demandesRejetees }}</h4>
                </div>
                <p class="mb-1">Demandes Rejetées</p>
            </div>
        </div>
    </div>

    <!-- Card 4: Lot de Demandes -->
    <div class="col-md-3 mb-3">
        <div class="card card-border-shadow-primary h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-1">
                    <div class="avatar me-4">
                        <span class="avatar-initial rounded bg-label-primary">
                            <i class="icon-base ti tabler-archive icon-28px"></i>
                        </span>
                    </div>
                    <h4 class="mb-0" style="color: #1abc9c;">{{ lotDemande }}</h4>
                </div>
                <p class="mb-1">Lot de Demandes</p>
            </div>
        </div>
    </div>
</div>


<div class="card mt-4 shadow">
    <div class="card-header bg-light">
        <h5 class="mb-0">Statistiques de l'évolution des demandes par mois</h5>
    </div>
    <div class="card-body">
        <div class="form-group">
            <label for="year-select" class="text-muted">Sélectionner une année :</label>
            <select id="year-select" class="form-control">
                {% for year in years %}
                    <option value="{{ year }}" {% if year == "now"|date("Y") %}selected{% endif %}>{{ year }}</option>
                {% endfor %}
            </select>
        </div>
        <div id="chart-container" style="height: 350px;"></div>
    </div>
</div>

<!-- Include ApexCharts -->
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const yearSelect = document.getElementById('year-select');
        const chartElement = document.getElementById('chart-container');
        let chart;

        function fetchData(year) {
            fetch(`/statistics/data/${year}`)
                .then(response => response.json())
                .then(data => {
                    const labels = data.map(item => new Date(year, item.month - 1).toLocaleString('default', { month: 'long' }));
                    const counts = data.map(item => item.count);

                    if (chart) {
                        chart.destroy();
                    }

                    chart = new ApexCharts(chartElement, {
                        chart: {
                            type: 'bar',
                            height: 350,
                            toolbar: {
                                show: false
                            },
                            zoom: {
                                enabled: false
                            }
                        },
                        series: [{
                            name: `Nombre de demandes`,
                            data: counts
                        }],
                        xaxis: {
                            categories: labels,
                            labels: {
                                style: {
                                    colors: '#6c757d'
                                }
                            }
                        },
                        yaxis: {
                            title: {
                                text: 'Nombre de demandes',
                                style: {
                                    color: '#6c757d'
                                }
                            },
                            min: 0
                        },
                        stroke: {
                            curve: 'smooth',
                            colors: ['#3498db']
                        },
                        markers: {
                            size: 5,
                            colors: ['#3498db'],
                            strokeColors: '#ffffff',
                            strokeWidth: 2
                        },
                        tooltip: {
                            theme: 'light'
                        },
                        colors: ['#3498db']
                    });

                    chart.render();
                });
        }

        yearSelect.addEventListener('change', function() {
            const selectedYear = yearSelect.value;
            fetchData(selectedYear);
        });

        fetchData(yearSelect.value);
    });
</script>
