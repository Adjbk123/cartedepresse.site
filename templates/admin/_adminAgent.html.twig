<div class="row">
    <div class="col-xxl-3 col-sm-3 col-ssm-12 mb-25">
        <!-- Card 1 -->
        <div class="ap-po-details ap-po-details--luodcy overview-card-shape radius-xl d-flex justify-content-between">
            <div class="ap-po-details-content d-flex flex-wrap justify-content-between w-100">
                <div class="ap-po-details__titlebar">
                    <p>Total des Demandes</p>
                    <h1>{{ totalDemandes }}</h1>
                </div>
                <div class="ap-po-details__icon-area color-success">
                    <i class="uil uil-file-alt"></i>
                </div>
            </div>
        </div>
        <!-- Card 1 End -->
    </div>

    <div class="col-xxl-3 col-sm-3 col-ssm-12 mb-25">
        <!-- Card 2 -->
        <div class="ap-po-details ap-po-details--luodcy overview-card-shape radius-xl d-flex justify-content-between">
            <div class="ap-po-details-content d-flex flex-wrap justify-content-between w-100">
                <div class="ap-po-details__titlebar">
                    <p>Demandes en Cours</p>
                    <h1>{{ demandesEnCours }}</h1>
                </div>
                <div class="ap-po-details__icon-area color-success">
                    <i class="uil uil-sync"></i>
                </div>
            </div>
        </div>
        <!-- Card 2 End -->
    </div>

    <div class="col-xxl-3 col-sm-3 col-ssm-12 mb-25">
        <!-- Card 3 -->
        <div class="ap-po-details ap-po-details--luodcy overview-card-shape radius-xl d-flex justify-content-between">
            <div class="ap-po-details-content d-flex flex-wrap justify-content-between w-100">
                <div class="ap-po-details__titlebar">
                    <p>Demandes Rejetées</p>
                    <h1>{{ demandesRejetees }}</h1>
                </div>
                <div class="ap-po-details__icon-area color-danger">
                    <i class="uil uil-times-circle"></i>
                </div>
            </div>
        </div>
        <!-- Card 3 End -->
    </div>

    <div class="col-xxl-3 col-sm-3 col-ssm-12 mb-25">
        <!-- Card 4 -->
        <div class="ap-po-details ap-po-details--luodcy overview-card-shape radius-xl d-flex justify-content-between">
            <div class="ap-po-details-content d-flex flex-wrap justify-content-between w-100">
                <div class="ap-po-details__titlebar">
                    <p>Lot de demandes</p>
                    <h1>{{ lotDemande }}</h1>
                </div>
                <div class="ap-po-details__icon-area color-info">
                    <i class="uil uil-file-alt"></i>
                </div>
            </div>
        </div>
        <!-- Card 4 End -->
    </div>




</div>


<div class="card mt-4">
    <div class="card-header">
        <h3>Statistiques de l'évolution des demandes par mois selon l'année</h3>
    </div>
    <div class="card-body">
        <div class="form-group">
            <label for="year-select">Sélectionner une année :</label>
            <select id="year-select" class="form-control border-dark">
                {% for year in years %}
                    <option value="{{ year }}" {% if year == "now"|date("Y") %}selected{% endif %}>{{ year }}</option>
                {% endfor %}
            </select>
        </div>
        <div id="statistics-chart" style="height: 80px;"></div>
    </div>
</div>

    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const yearSelect = document.getElementById('year-select');
            const chartElement = document.getElementById('statistics-chart');
            let chart;

            function fetchData(year) {
                fetch(`/statistics/data/${year}`)
                    .then(response => response.json())
                    .then(data => {
                        const labels = data.map(item => new Date(year, item.month - 1).toLocaleString('default', { month: 'long' }));
                        const counts = data.map(item => item.count);

                        if (chart) {
                            chart.destroy();
                        }

                        chart = new ApexCharts(chartElement, {
                            chart: {
                                type: 'bar',
                                height: 350
                            },
                            series: [{
                                name: `Nombre de demandes en ${year}`,
                                data: counts
                            }],
                            xaxis: {
                                categories: labels
                            },
                            yaxis: {
                                title: {
                                    text: 'Nombre de demandes'
                                },
                                min: 0
                            },
                            plotOptions: {
                                bar: {
                                    borderRadius: 4,
                                    horizontal: false
                                }
                            },
                            dataLabels: {
                                enabled: true,
                                style: {
                                    fontSize: '12px',
                                    fontFamily: 'Helvetica, Arial, sans-serif',
                                    fontWeight: 'bold',
                                    colors: ['#ffffff']
                                }
                            },
                            colors: ['#118329']
                        });

                        chart.render();
                    });
            }

            yearSelect.addEventListener('change', function() {
                const selectedYear = yearSelect.value;
                fetchData(selectedYear);
            });

            fetchData(yearSelect.value); // Fetch data for the initial year
        });
    </script>


